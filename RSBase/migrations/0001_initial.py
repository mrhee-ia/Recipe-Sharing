# Generated by Django 5.0.8 on 2024-08-09 16:47

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=60, unique=True)),
                ('email', models.EmailField(max_length=225, unique=True)),
                ('first_name', models.CharField(max_length=225)),
                ('last_name', models.CharField(max_length=225)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('bio', models.TextField(blank=True, max_length=101, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('appetizer', 'Appetizer'), ('salad', 'Salad'), ('side-dish', 'Side-Dish'), ('baked goods', 'Baked Goods'), ('dessert', 'Dessert'), ('snack', 'Snack'), ('soup', 'Soup'), ('vegetarian', 'Vegetarian'), ('fried', 'Fried'), ('bread', 'Bread'), ('seafood', 'Seafood'), ('pasta', 'Pasta'), ('cookies', 'Cookies'), ('ice cream', 'Ice Cream'), ('others', 'Others')], default='others', max_length=60)),
                ('rmedia', models.FileField(blank=True, null=True, upload_to='recipe_media/')),
                ('ingredients', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='RSBase.user')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='RSBase.comment')),
                ('comment_recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_recipe', to='RSBase.recipe')),
                ('comment_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_user', to='RSBase.user')),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, null=True)),
                ('smedia', models.FileField(blank=True, null=True, upload_to='step_media/')),
                ('step', models.TextField()),
                ('step_order', models.PositiveIntegerField()),
                ('procedure_recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='RSBase.recipe')),
            ],
            options={
                'ordering': ['step_order'],
                'unique_together': {('procedure_recipe', 'step_order')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('like_recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_recipe', to='RSBase.recipe')),
                ('like_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_user', to='RSBase.user')),
            ],
            options={
                'unique_together': {('like_user', 'like_recipe')},
            },
        ),
    ]
